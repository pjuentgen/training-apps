apiVersion: v1
kind: ServiceAccount
metadata:
  name: spring-boot-demo-sa
  namespace: spring-boot-demo
  labels:
    app: spring-boot-demo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: spring-boot-demo
  name: spring-boot-demo-role
  labels:
    app: spring-boot-demo
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spring-boot-demo-rolebinding
  namespace: spring-boot-demo
  labels:
    app: spring-boot-demo
subjects:
- kind: ServiceAccount
  name: spring-boot-demo-sa
  namespace: spring-boot-demo
roleRef:
  kind: Role
  name: spring-boot-demo-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: spring-boot-demo-netpol
  namespace: spring-boot-demo
  labels:
    app: spring-boot-demo
spec:
  podSelector:
    matchLabels:
      app: spring-boot-demo
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - {} # Allow all egress traffic